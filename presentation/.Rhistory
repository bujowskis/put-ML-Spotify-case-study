descriptive = csv.read("C:\\Users\\ADMIN\\Google Drive\\PUT\\AI3\\Statistics\\Lab\\test1\\descriptive.csv")
descriptive = read.csv("C:\\Users\\ADMIN\\Google Drive\\PUT\\AI3\\Statistics\\Lab\\test1\\descriptive.csv")
View(descriptive)
descriptive = read.csv("C:\\Users\\ADMIN\\Google Drive\\PUT\\AI3\\Statistics\\Lab\\test1\\descriptive.csv", sep = ";")
View(descriptive)
View(descriptive)
# TASK 1
exam = descriptive$exam
# TASK 1
exam = na.omit(descriptive$exam)
# a)
summary(exam)
sd(exam)
?sd
# a)
mean(exam)
?var
# sd = 3.37
# on average, the results deviate from the mean by 3.37
var_index = sd(exam)/mean(exam) * 100
# b)
table(exam)
?table
table(cut(exam, intervals, right=FALSE)
table(cut(exam, intervals, right=FALSE))
table(cut(exam, intervals))
# b)
intervals = c(25, 30, 35, 40, 45, 50)
table(cut(exam, intervals))
table(cut(exam, intervals))
freq_table = table(cut(exam, intervals))
# c)
discrete.histograms(freq_table, freq=TRUE, xlab="grades")
# c)
discrete.histogram(freq_table, freq=TRUE, xlab="grades")
install.packages("arm")
library(arm)
# c)
discrete.histogram(freq_table, freq=TRUE, xlab="grades")
# c)
discrete.histogram(freq_table, xlab="grades")
# c)
discrete.histogram(freq_table, freq = TRUE, xlab="grades")
?discrete.histogram
# c)
discrete.histogram(freq_table, freq = TRUE, xlab="results")
# c)
discrete.histogram(cut(exam. intervals), freq = TRUE, xlab="results")
# c)
discrete.histogram(cut(exam, intervals), freq = TRUE, xlab="results")
# c)
discrete.histogram(freq_table, freq = TRUE, xlab="results")
# TASK 2
no_years = c(4, 3, 2, 1)
freq = c(5, 16, 25, 12)
# a)
binom(no_years, freq)
?binom
??binom
# a)
dbinom(no_years, freq)
# TASK 4
repair_cost = na.omit(descriptive$collisions)
print(repair_cost)
print(repair_cost)
# TASK 4
repair_cost = na.omit(descriptive$collisions)
print(repair_cost)
# assume - normal
# estimate mean cost per collision with 95% confidence (how convenient)
# interpret results
# exceed 2000$ - send drivers to some special course of safe-driving
t.test(repair_cost, conf.level = 0.95)
# assume - normal
# sigma - unknown
# estimate mean cost per collision with 95% confidence (how convenient)
t.test(repair_cost, conf.level = 0.95)
# 40/125 individuals
n = 125
T = 40
conf = 0.95
alpha = 1 - conf
phat = T/n
z = qnorm(1 - alpha/2)
lower_bound = phat - z*sqrt(phat*(1-phat)/n) # round up to 0
upper_bound = phat + z*sqrt(phat*(1-phat)/n)
# 40/125 individuals
n = 125
T = 40
conf = 0.95
alpha = 1 - conf
phat = T/n
z = qnorm(1 - alpha/2)
lower_bound = phat - z*sqrt(phat*(1-phat)/n) # round up to 0
upper_bound = phat + z*sqrt(phat*(1-phat)/n)
descriptive = read.csv("C:\\Users\\ADMIN\\Google Drive\\PUT\\AI3\\Statistics\\Lab\\test1\\descriptive.csv", sep = ";")
# b)
intervals = c(25, 30, 35, 40, 45, 50)
freq_table = table(cut(exam, intervals))
# TASK 1
exam = na.omit(descriptive$exam)
# b)
intervals = c(25, 30, 35, 40, 45, 50)
freq_table = table(cut(exam, intervals))
print(freq_table)
# c)
discrete.histogram(intervals, freq = TRUE, xlab="results") # TODO
# c)
discrete.histogram(freq_table, freq = TRUE, xlab="results") # TODO
# c)
discrete.histogram(freq_table, freq = TRUE, xlab="results", main = "Frequency histogram of exam results") # TODO
# a)
dbinom(no_years, freq)
# TASK 2
no_years = c(4, 3, 2, 1)
freq = c(5, 16, 25, 12)
# a)
dbinom(no_years, freq)
?dbinom
?rbinom
# a)
dbinom(no_years, 4, freq)
# TASK 2
no_years = c("more", 4, 3, 2, 1)
freq = c(42, 5, 16, 25, 12)
# a)
dbinom(, no_years, freq)
# a)
dbinom(no_years, freq)
# a)
dbinom(no_years, freq)
?rbinom
?zsum.test
?zsum.test
?chisq.test
install.packages("knitr")
install.packages("DT")
setwd("C:/Users/ADMIN/PycharmProjects/put-ML-Spotify-case-study/presentation")
install.packages("imager")
install.packages("webshot")
install.packages("readr")
install.packages("knitr")
